<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on 静心台--keep learning and keep moving</title>
    <link>https://www.ipeapea.cn/post/</link>
    <description>Recent content in Posts on 静心台--keep learning and keep moving</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <copyright>CopyRight@2010-2030 ipeapea.cn 蜀ICP备2021020797号</copyright>
    <lastBuildDate>Sun, 26 Dec 2021 23:19:17 +0800</lastBuildDate><atom:link href="https://www.ipeapea.cn/post/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>GIT-说点不一样的东西</title>
      <link>https://www.ipeapea.cn/post/git_something/</link>
      <pubDate>Sun, 26 Dec 2021 23:19:17 +0800</pubDate>
      
      <guid>https://www.ipeapea.cn/post/git_something/</guid>
      <description>&lt;p&gt;我们知道git是一个分布式版本控制系统，本地目录&lt;code&gt;.git/objects/&lt;/code&gt;扮演着数据库（键值对数据库）的角色，里面有&lt;code&gt;blob&lt;/code&gt;、&lt;code&gt;tree&lt;/code&gt;、&lt;code&gt;commit&lt;/code&gt;、&lt;code&gt;tag&lt;/code&gt;类型，每一次提交保存的都是完整数据的一次快照。而我一直好奇的有两个点：一是这个全量数据中会记录&lt;code&gt;author&lt;/code&gt;和&lt;code&gt;commit time&lt;/code&gt;等信息吗？二是像&lt;code&gt;git cherry-pick&lt;/code&gt;和&lt;code&gt;git rebase&lt;/code&gt;这些指令可以将某一次提交的改动作为操作单元是如何实现的，按照&lt;code&gt;blob&lt;/code&gt;的定义，每一次&lt;code&gt;commit&lt;/code&gt;也是保存的全量数据呀。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>认识GO语言url.URL结构体</title>
      <link>https://www.ipeapea.cn/post/go-url/</link>
      <pubDate>Thu, 27 May 2021 16:57:53 +0800</pubDate>
      
      <guid>https://www.ipeapea.cn/post/go-url/</guid>
      <description>&lt;p&gt;在日常编码中，我曾不止一次对于go语言的&lt;code&gt;url.URL&lt;/code&gt;结构中&lt;code&gt;Opaque&lt;/code&gt;和&lt;code&gt;RawPath&lt;/code&gt;字段含义产生过疑义，不知其有何意义。
比如如下代码&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span class=&#34;nx&#34;&gt;uStr&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;http://root:password@localhost:28080/home/login?id=1&amp;amp;name=foo#fragment&amp;#34;&lt;/span&gt;
&lt;span class=&#34;nx&#34;&gt;u&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;_&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;url&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Parse&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;uStr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>Mac本地学习K8s</title>
      <link>https://www.ipeapea.cn/post/minikube_learn/</link>
      <pubDate>Tue, 18 May 2021 03:24:29 +0800</pubDate>
      
      <guid>https://www.ipeapea.cn/post/minikube_learn/</guid>
      <description>&lt;p&gt;本文来自于要将国内的一个项目迁移到海外，剥离国内公司域内的各种依赖，海外环境提供k8s部署环境，因此需要学习k8s。
本地学习k8s最好方式就是在本地搭建一个minikube集群，mimikube提供了全套的kubectl命令支持，功能十分强大，此文章记录其中比较重要的命令，以备查询&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;文章资料来源于官网https://minikube.sigs.k8s.io/docs/start/&lt;/p&gt;
&lt;/blockquote&gt;</description>
    </item>
    
    <item>
      <title>GO闭包实现底层分析</title>
      <link>https://www.ipeapea.cn/post/closure/</link>
      <pubDate>Tue, 04 May 2021 15:27:58 +0800</pubDate>
      
      <guid>https://www.ipeapea.cn/post/closure/</guid>
      <description>&lt;p&gt;闭包函数是指引用了自由变量的函数，如下&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span class=&#34;kd&#34;&gt;func&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;create&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;func&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
	&lt;span class=&#34;nx&#34;&gt;c&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;     &lt;span class=&#34;c1&#34;&gt;// 自由变量
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;	&lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;func&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
		&lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;c&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;// 引用了自由变量
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;	&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>Bolt源码分析（二）--数据结构解读</title>
      <link>https://www.ipeapea.cn/post/bolt2_reading/</link>
      <pubDate>Sun, 02 May 2021 13:35:13 +0800</pubDate>
      
      <guid>https://www.ipeapea.cn/post/bolt2_reading/</guid>
      <description>&lt;p&gt;&amp;hellip;接上文，继续分析结构体&lt;code&gt;node&lt;/code&gt;，一个&lt;code&gt;node&lt;/code&gt;对应一个&lt;code&gt;page&lt;/code&gt;页在运行时结构，其定义如下&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Bolt源码分析（一）--数据结构解读</title>
      <link>https://www.ipeapea.cn/post/bolt_reading/</link>
      <pubDate>Wed, 28 Apr 2021 23:45:39 +0800</pubDate>
      
      <guid>https://www.ipeapea.cn/post/bolt_reading/</guid>
      <description>&lt;p&gt;本文作为bolt的入门篇，介绍几个bolt的基本数据结构&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Go Asm</title>
      <link>https://www.ipeapea.cn/post/go-asm/</link>
      <pubDate>Thu, 15 Apr 2021 02:09:52 +0800</pubDate>
      
      <guid>https://www.ipeapea.cn/post/go-asm/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;本文最初是在公司内部小组技术分享&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;为什么想分享这个知识点&#34;&gt;为什么想分享这个知识点&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;经常性在阅读GO源码时，会追溯到底层的汇编实现，如果不理解，就会懵逼了&lt;/li&gt;
&lt;li&gt;网上大量的大神在分析某个特性或者实现时，常常都会祭出底层汇编，这也说明，要明白GO底层的很多设计，都必须要了解GO汇编&lt;/li&gt;
&lt;li&gt;性能优化，代码分析所需，虽然这种情况很少&lt;/li&gt;
&lt;li&gt;了解底层实现，充实自己的武器库&lt;/li&gt;
&lt;li&gt;具备部分辩伪能力，学习了GO汇编，多少会对语言特性的底层实现有一些嗅觉&lt;/li&gt;
&lt;li&gt;装逼，装逼是第一生产力&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>Go Benchmark理解</title>
      <link>https://www.ipeapea.cn/post/go-benchmark/</link>
      <pubDate>Sat, 10 Apr 2021 15:25:29 +0800</pubDate>
      
      <guid>https://www.ipeapea.cn/post/go-benchmark/</guid>
      <description>&lt;h2 id=&#34;前言&#34;&gt;前言&lt;/h2&gt;
&lt;p&gt;go语言本身提供了基准测试的支持，基准测试有以下要求&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;文件以_test.go结尾&lt;/li&gt;
&lt;li&gt;基准测试函数以Benchmark开头&lt;/li&gt;
&lt;li&gt;函数参数为*testing.B 类型，无返回值&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>网站收藏</title>
      <link>https://www.ipeapea.cn/post/tool-site/</link>
      <pubDate>Wed, 13 Jan 2021 19:05:38 +0800</pubDate>
      
      <guid>https://www.ipeapea.cn/post/tool-site/</guid>
      <description>&lt;ul&gt;
&lt;li&gt;手绘网站，无需注册&lt;a href=&#34;https://excalidraw.com/&#34;&gt;excalidraw&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
  </channel>
</rss>
